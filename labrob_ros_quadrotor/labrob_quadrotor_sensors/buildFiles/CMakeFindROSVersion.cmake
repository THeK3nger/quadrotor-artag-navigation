
set(ROS_ROOT $ENV{ROS_ROOT})
set(ROS_ELECTRIC_FOUND false)
set(ROS_FUERTE_FOUND false)
if(ROS_ROOT)
    option(USE_ROS "Integrate with ROS rather than using native files" ON)
    message(STATUS "Found ROS; USE_ROS is ${USE_ROS}")
		add_definitions(-DUSE_ROS)
    message(STATUS "Set -DUSE_ROS OFF if you do not want to link ROS")
    if(USE_ROS)
	if(EXISTS "/opt/ros/fuerte/")
		message(STATUS "ROS Fuerte found in /opt/ros/fuerte/.")
		add_definitions(-DROS_FUERTE)
		set(ROS_FUERTE_FOUND true)
                set(ROS_INC /opt/ros/fuerte/stacks/perception_pcl/pcl_ros/include/)
                set(ROS_INC ${ROS_INC} /opt/ros/fuerte/include/pcl-1.5/)
                set(ROS_INC ${ROS_INC} /usr/include/eigen3)
                set(ROS_INC ${ROS_INC} /opt/ros/fuerte/stacks/simulator_gazebo/gazebo_plugins/cfg/cpp/)
                set(ROS_INC ${ROS_INC} /opt/ros/fuerte/stacks/simulator_gazebo/gazebo_plugins/include/)
                set(ROS_INC ${ROS_INC} /opt/ros/fuerte/stacks/simulator_gazebo/gazebo/gazebo/include/gazebo-1.0.2/gazebo/)
                set(ROS_INC ${ROS_INC} /opt/ros/fuerte/stacks/simulator_gazebo/gazebo_plugins)
                set(ROS_LINC /opt/ros/fuerte/stacks/perception_pcl/pcl_ros/lib)
                set(ROS_LINC ${ROS_LINC} /opt/ros/fuerte/stacks/simulator_gazebo/gazebo_plugins/lib)
                set(ROS_LINC ${ROS_LINC} /opt/ros/fuerte/stacks/simulator_gazebo/gazebo/gazebo/lib)
	elseif(EXISTS "/opt/ros/electric/")
		message(STATUS "ROS Electric found in /opt/ros/electric/.")
		add_definitions(-DROS_ELECTRIC)
		set(ROS_ELECTRIC_FOUND true)
	endif(EXISTS "/opt/ros/fuerte/")
	add_definitions(-DBT_USE_DOUBLE_PRECISION)
	endif(USE_ROS)
endif(ROS_ROOT)
